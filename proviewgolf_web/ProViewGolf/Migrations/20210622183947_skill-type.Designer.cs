// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProViewGolf.DataLayer;

namespace ProViewGolf.Migrations
{
    [DbContext(typeof(ProGolfContext))]
    [Migration("20210622183947_skill-type")]
    partial class skilltype
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.Booking", b =>
                {
                    b.Property<long>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProRefId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("StudentRefId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StudentUserId")
                        .HasColumnType("bigint");

                    b.HasKey("BookingId");

                    b.HasIndex("ProUserId");

                    b.HasIndex("StudentUserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.ClubPractice", b =>
                {
                    b.Property<long>("ClubPracticeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Apex")
                        .HasColumnType("real");

                    b.Property<float>("AvgDistance")
                        .HasColumnType("real");

                    b.Property<float>("BallsAmount")
                        .HasColumnType("real");

                    b.Property<int>("Club")
                        .HasColumnType("int");

                    b.Property<float>("ClubHeadSpeed")
                        .HasColumnType("real");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ground")
                        .HasColumnType("int");

                    b.Property<bool>("IsWithPro")
                        .HasColumnType("bit");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<float>("SpinRate")
                        .HasColumnType("real");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("ClubPracticeId");

                    b.HasIndex("StudentId");

                    b.ToTable("ClubPractices");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.Equipment", b =>
                {
                    b.Property<long>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Club")
                        .HasColumnType("int");

                    b.Property<int>("ClubLoft")
                        .HasColumnType("int");

                    b.Property<string>("Grip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pairs")
                        .HasColumnType("int");

                    b.Property<int>("Pieces")
                        .HasColumnType("int");

                    b.Property<string>("Shaft")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId");

                    b.HasIndex("StudentId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.Game", b =>
                {
                    b.Property<long>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BunkerShortsRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ChipPeaces")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DistanceWalked")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DriverPeaces")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DriversCenter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DriversLeft")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DriversRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DriversRight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExactHcp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FlightPartnersRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GameDuration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GameType")
                        .HasColumnType("int");

                    b.Property<string>("GolfCourse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GreenSpeedRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Holes")
                        .HasColumnType("int");

                    b.Property<decimal>("IronPeaces")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IronsCenter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IronsLeft")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IronsRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IronsRight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Nervous")
                        .HasColumnType("bit");

                    b.Property<decimal>("NewHcp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PlayingHcp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PuttPeaces")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PuttingStrokes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SandPeaces")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShortIronGameRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StableForPoints")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Strokes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Walking")
                        .HasColumnType("bit");

                    b.Property<decimal>("WarmupTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WoodsCenter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WoodsLeft")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WoodsRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WoodsRight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("GameId");

                    b.HasIndex("StudentId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.Invitation", b =>
                {
                    b.Property<long>("InvitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StudentEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvitationId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.Review", b =>
                {
                    b.Property<long>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Alignment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BackspinControl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BallPosition")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Blocking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Bowing")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Concentration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ControlBall")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CourseManagement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Dipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Etiquette")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FinishPosition")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Fitness")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Flexibility")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Folding")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FollowThrough")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GolfRules")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Grip")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GripPressure")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HandPosition")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HeadMovement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LawBallFight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Lifting")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Looping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MentalStrength")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Overswinging")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PaceOfGame")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PlayingPunch")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ProRefId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PuttingTechnique")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Realease")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReverseWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Stance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("StudentRefId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StudentUserId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("SwippingTheBall")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TakeAway")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WeightTransfer")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ReviewId");

                    b.HasIndex("ProUserId");

                    b.HasIndex("StudentUserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.Session", b =>
                {
                    b.Property<long>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProRefId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<long>("StudentRefId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StudentUserId")
                        .HasColumnType("bigint");

                    b.HasKey("SessionId");

                    b.HasIndex("ProUserId");

                    b.HasIndex("StudentUserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.ShotPractice", b =>
                {
                    b.Property<long>("ShotPracticeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GoodShots")
                        .HasColumnType("int");

                    b.Property<bool>("IsWithPro")
                        .HasColumnType("bit");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("ShotCategory")
                        .HasColumnType("int");

                    b.Property<int>("ShotType")
                        .HasColumnType("int");

                    b.Property<int>("Shots")
                        .HasColumnType("int");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.HasKey("ShotPracticeId");

                    b.HasIndex("StudentId");

                    b.ToTable("ShotPractices");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.Skill", b =>
                {
                    b.Property<long>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AlignmentDrill")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CourseManagement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FitnessSessionCore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FitnessSessionLowerBody")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FitnessSessionUpperBody")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GreenReading")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MentalTraining")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RulesQuiz")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Stretching")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("VideoSwingAnalysis")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("_18HolesPlayedWithGolfCar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("_18HolesWalk")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("_9HolesWalk")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SkillId");

                    b.HasIndex("StudentId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AccountVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VerificationTokenExpiry")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.Pro", b =>
                {
                    b.HasBaseType("ProViewGolf.Core.Dbo.Entities.User");

                    b.HasDiscriminator().HasValue("Pro");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.Student", b =>
                {
                    b.HasBaseType("ProViewGolf.Core.Dbo.Entities.User");

                    b.Property<long>("ProRefId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("ProViewHcp")
                        .HasColumnType("int");

                    b.Property<int>("ProViewLevel")
                        .HasColumnType("int");

                    b.HasIndex("ProUserId");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.Booking", b =>
                {
                    b.HasOne("ProViewGolf.Core.Dbo.Entities.Pro", "Pro")
                        .WithMany()
                        .HasForeignKey("ProUserId");

                    b.HasOne("ProViewGolf.Core.Dbo.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentUserId");

                    b.Navigation("Pro");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.ClubPractice", b =>
                {
                    b.HasOne("ProViewGolf.Core.Dbo.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.Equipment", b =>
                {
                    b.HasOne("ProViewGolf.Core.Dbo.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.Game", b =>
                {
                    b.HasOne("ProViewGolf.Core.Dbo.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.Review", b =>
                {
                    b.HasOne("ProViewGolf.Core.Dbo.Entities.Pro", "Pro")
                        .WithMany()
                        .HasForeignKey("ProUserId");

                    b.HasOne("ProViewGolf.Core.Dbo.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentUserId");

                    b.Navigation("Pro");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.Session", b =>
                {
                    b.HasOne("ProViewGolf.Core.Dbo.Entities.Pro", "Pro")
                        .WithMany()
                        .HasForeignKey("ProUserId");

                    b.HasOne("ProViewGolf.Core.Dbo.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentUserId");

                    b.Navigation("Pro");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.ShotPractice", b =>
                {
                    b.HasOne("ProViewGolf.Core.Dbo.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.Skill", b =>
                {
                    b.HasOne("ProViewGolf.Core.Dbo.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.User", b =>
                {
                    b.OwnsOne("ProViewGolf.Core.Dbo.Entities.Profile", "Profile", b1 =>
                        {
                            b1.Property<long>("UserId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Age")
                                .HasColumnType("int");

                            b1.Property<int>("DistanceUnit")
                                .HasColumnType("int");

                            b1.Property<string>("FirstName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("Gender")
                                .HasColumnType("bit");

                            b1.Property<int>("Hcp")
                                .HasColumnType("int");

                            b1.Property<string>("HealthLimitation")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("SpeedUnit")
                                .HasColumnType("int");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.Student", b =>
                {
                    b.HasOne("ProViewGolf.Core.Dbo.Entities.Pro", "Pro")
                        .WithMany("Students")
                        .HasForeignKey("ProUserId");

                    b.Navigation("Pro");
                });

            modelBuilder.Entity("ProViewGolf.Core.Dbo.Entities.Pro", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
